@{
    int x = 0;
    _scrollreference = null;
}
<div style="width: @Style.Width;">
    <input @ref="TextReference" 
           style="@GetTextStyle() background-color: @Style.BackgroundColor;"
           @bind-value="@Value"
           @bind-value:event="oninput"
           @onkeypress="@KeyPress" 
           type="text"
           id="@GetId()"
           placeholder="@Placeholder"
           class="customtextbox" />
</div>
@if (Virtualized == false)
{
    <div class="customscroll" style="width: @Style.Width; height: @Style.Height; background-color: @Style.BackgroundColor ;">
        @foreach (var item in ItemList!)
        {
            int y;
            y = x;
            @if (y == _service!.ElementScrollTo)
            {
                <div @onclick="() => ElementClicked(y)" style="@GetColorStyle(y)" @ref="_scrollreference"
                     onmouseover="this.style.background='@GetHoverColor(y)'"
                     onmouseout="this.style.background='@GetBackgroundColor(y)'">
                    <div style="@GetTextStyle()">
                        @item
                    </div>
                </div>
            }
            else if (y == 0)
            {
                <div @onclick="() => ElementClicked(y)" @ref="_firstreference"
                     onmouseover="this.style.background='@GetHoverColor(y)'"
                     onmouseout="this.style.background='@GetBackgroundColor(y)'">
                    <div style="@GetTextStyle()">
                        @item
                    </div>
                </div>
            }
            else
            {
                <div @onclick="() => ElementClicked(y)" style="@GetColorStyle(y)"
                     onmouseover="this.style.background='@GetHoverColor(y)'"
                     onmouseout="this.style.background='@GetBackgroundColor(y)'">
                    <div style="@GetTextStyle()">
                        @item
                    </div>
                </div>
            }

            x++;
        }

    </div>

}
else
{
    <VirtualSimpleComponent Items="ItemList"
                            HasSolidBlackBorders="true"
                            ContainerWidth="@Style.Width"
                            ContainerHeight="@Style.Height"
                            LineHeight="@Style.LineHeight"
                            Context="item"
                            BackgroundColor="@Style.BackgroundColor"
                            @ref="_virtual">
        <div @onclick="() => ElementClicked(item.Index)" style="@GetColorStyle(item.Index)"
             onmouseover="this.style.background='@GetHoverColor(item.Index)'"
             onmouseout="this.style.background='@GetBackgroundColor(item.Index)'"
             >
            <div style="@GetTextStyle()">
                @item.Element
            </div>
        </div>
        
    </VirtualSimpleComponent>


}